{"ast":null,"code":"import { Film } from \"../Models/Film\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FilmService = /*#__PURE__*/(() => {\n  class FilmService {\n    constructor(http) {\n      this.http = http;\n      this.films = [];\n      this.films = [];\n    }\n\n    add(film) {}\n\n    get(id) {}\n\n    getAll() {\n      return this.films;\n    }\n\n    getPopular(films) {\n      return this.http.get(environment.popularURL + environment.API_TOKEN).toPromise().then(data => data.results.map((res, key = res.id) => {\n        console.log(res);\n        films.push(new Film(res.adult, res.id, res.backdrop_path, res.genre_ids, res.original_language, res.original_title, res.overview, res.popularity, res.poster_path, res.release_date, res.title, res.video, res.vote_average, res.vote_count));\n      }));\n    }\n\n    getUpcoming(films) {\n      return this.http.get(environment.upcomingURL + environment.API_TOKEN).toPromise().then(data => data.results.map((res, key = res.id) => {\n        console.log(res);\n        films.push(new Film(res.adult, res.id, res.backdrop_path, res.genre_ids, res.original_language, res.original_title, res.overview, res.popularity, res.poster_path, res.release_date, res.title, res.video, res.vote_average, res.vote_count));\n      }));\n    }\n\n    getToprated(films) {\n      return this.http.get(environment.topratedURL + environment.API_TOKEN).toPromise().then(data => data.results.map((res, key = res.id) => {\n        console.log(res);\n        films.push(new Film(res.adult, res.id, res.backdrop_path, res.genre_ids, res.original_language, res.original_title, res.overview, res.popularity, res.poster_path, res.release_date, res.title, res.video, res.vote_average, res.vote_count));\n      }));\n    }\n\n    getTop3rated(films) {\n      return this.http.get(environment.topratedURL + environment.API_TOKEN).toPromise().then(data => data.results.slice(0, 3).map((res, key = res.id) => {\n        console.log(res);\n        films.push(new Film(res.adult, res.id, res.backdrop_path, res.genre_ids, res.original_language, res.original_title, res.overview, res.popularity, res.poster_path, res.release_date, res.title, res.video, res.vote_average, res.vote_count));\n      }));\n    }\n\n    searchMovies(searchTitle) {\n      return this.http.get('https://api.themoviedb.org/3/search/movie?api_key=0d271ec451479b148ed4fcfb840d8061&language=fr&query=' + searchTitle + \"&page=\" + 1).toPromise().then(response => {\n        console.log(response);\n        this.films.push(new Film(response.adult, response.id, response.backdrop_path, response.genre_ids, response.original_language, response.original_title, response.overview, response.popularity, response.poster_path, response.release_date, response.title, response.video, response.vote_average, response.vote_count));\n      });\n    }\n\n  }\n\n  FilmService.ɵfac = function FilmService_Factory(t) {\n    return new (t || FilmService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FilmService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FilmService,\n    factory: FilmService.ɵfac,\n    providedIn: 'root'\n  });\n  return FilmService;\n})();","map":null,"metadata":{},"sourceType":"module"}